# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import dashboard.api.orders_pb2 as orders__pb2


class OrdersOperationsStub(object):
    """*
    Services
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchOrders = channel.unary_unary(
                '/shoppy_backend.OrdersOperations/FetchOrders',
                request_serializer=orders__pb2.FetchOrdersRequest.SerializeToString,
                response_deserializer=orders__pb2.FetchOrdersResponse.FromString,
                )
        self.FetchOrder = channel.unary_unary(
                '/shoppy_backend.OrdersOperations/FetchOrder',
                request_serializer=orders__pb2.FetchOrderRequest.SerializeToString,
                response_deserializer=orders__pb2.FetchOrderResponse.FromString,
                )
        self.CreateOrder = channel.unary_unary(
                '/shoppy_backend.OrdersOperations/CreateOrder',
                request_serializer=orders__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=orders__pb2.CreateOrderResponse.FromString,
                )


class OrdersOperationsServicer(object):
    """*
    Services
    """

    def FetchOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrdersOperationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchOrders,
                    request_deserializer=orders__pb2.FetchOrdersRequest.FromString,
                    response_serializer=orders__pb2.FetchOrdersResponse.SerializeToString,
            ),
            'FetchOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchOrder,
                    request_deserializer=orders__pb2.FetchOrderRequest.FromString,
                    response_serializer=orders__pb2.FetchOrderResponse.SerializeToString,
            ),
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=orders__pb2.CreateOrderRequest.FromString,
                    response_serializer=orders__pb2.CreateOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shoppy_backend.OrdersOperations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrdersOperations(object):
    """*
    Services
    """

    @staticmethod
    def FetchOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shoppy_backend.OrdersOperations/FetchOrders',
            orders__pb2.FetchOrdersRequest.SerializeToString,
            orders__pb2.FetchOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shoppy_backend.OrdersOperations/FetchOrder',
            orders__pb2.FetchOrderRequest.SerializeToString,
            orders__pb2.FetchOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shoppy_backend.OrdersOperations/CreateOrder',
            orders__pb2.CreateOrderRequest.SerializeToString,
            orders__pb2.CreateOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
