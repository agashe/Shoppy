// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: home.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// HomeOperationsClient is the client API for HomeOperations service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HomeOperationsClient interface {
	FetchHomePage(ctx context.Context, in *FetchHomePageRequest, opts ...grpc.CallOption) (*FetchHomePageResponse, error)
	FetchAboutPage(ctx context.Context, in *FetchAboutPageRequest, opts ...grpc.CallOption) (*FetchAboutPageResponse, error)
	SendContactUsMessage(ctx context.Context, in *SendContactUsMessageRequest, opts ...grpc.CallOption) (*SendContactUsMessageResponse, error)
}

type homeOperationsClient struct {
	cc grpc.ClientConnInterface
}

func NewHomeOperationsClient(cc grpc.ClientConnInterface) HomeOperationsClient {
	return &homeOperationsClient{cc}
}

func (c *homeOperationsClient) FetchHomePage(ctx context.Context, in *FetchHomePageRequest, opts ...grpc.CallOption) (*FetchHomePageResponse, error) {
	out := new(FetchHomePageResponse)
	err := c.cc.Invoke(ctx, "/shoppy_backend.HomeOperations/FetchHomePage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeOperationsClient) FetchAboutPage(ctx context.Context, in *FetchAboutPageRequest, opts ...grpc.CallOption) (*FetchAboutPageResponse, error) {
	out := new(FetchAboutPageResponse)
	err := c.cc.Invoke(ctx, "/shoppy_backend.HomeOperations/FetchAboutPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeOperationsClient) SendContactUsMessage(ctx context.Context, in *SendContactUsMessageRequest, opts ...grpc.CallOption) (*SendContactUsMessageResponse, error) {
	out := new(SendContactUsMessageResponse)
	err := c.cc.Invoke(ctx, "/shoppy_backend.HomeOperations/SendContactUsMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HomeOperationsServer is the server API for HomeOperations service.
// All implementations must embed UnimplementedHomeOperationsServer
// for forward compatibility
type HomeOperationsServer interface {
	FetchHomePage(context.Context, *FetchHomePageRequest) (*FetchHomePageResponse, error)
	FetchAboutPage(context.Context, *FetchAboutPageRequest) (*FetchAboutPageResponse, error)
	SendContactUsMessage(context.Context, *SendContactUsMessageRequest) (*SendContactUsMessageResponse, error)
	mustEmbedUnimplementedHomeOperationsServer()
}

// UnimplementedHomeOperationsServer must be embedded to have forward compatible implementations.
type UnimplementedHomeOperationsServer struct {
}

func (UnimplementedHomeOperationsServer) FetchHomePage(context.Context, *FetchHomePageRequest) (*FetchHomePageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchHomePage not implemented")
}
func (UnimplementedHomeOperationsServer) FetchAboutPage(context.Context, *FetchAboutPageRequest) (*FetchAboutPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchAboutPage not implemented")
}
func (UnimplementedHomeOperationsServer) SendContactUsMessage(context.Context, *SendContactUsMessageRequest) (*SendContactUsMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendContactUsMessage not implemented")
}
func (UnimplementedHomeOperationsServer) mustEmbedUnimplementedHomeOperationsServer() {}

// UnsafeHomeOperationsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HomeOperationsServer will
// result in compilation errors.
type UnsafeHomeOperationsServer interface {
	mustEmbedUnimplementedHomeOperationsServer()
}

func RegisterHomeOperationsServer(s grpc.ServiceRegistrar, srv HomeOperationsServer) {
	s.RegisterService(&HomeOperations_ServiceDesc, srv)
}

func _HomeOperations_FetchHomePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchHomePageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeOperationsServer).FetchHomePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppy_backend.HomeOperations/FetchHomePage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeOperationsServer).FetchHomePage(ctx, req.(*FetchHomePageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HomeOperations_FetchAboutPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchAboutPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeOperationsServer).FetchAboutPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppy_backend.HomeOperations/FetchAboutPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeOperationsServer).FetchAboutPage(ctx, req.(*FetchAboutPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HomeOperations_SendContactUsMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendContactUsMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeOperationsServer).SendContactUsMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shoppy_backend.HomeOperations/SendContactUsMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeOperationsServer).SendContactUsMessage(ctx, req.(*SendContactUsMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// HomeOperations_ServiceDesc is the grpc.ServiceDesc for HomeOperations service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var HomeOperations_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "shoppy_backend.HomeOperations",
	HandlerType: (*HomeOperationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchHomePage",
			Handler:    _HomeOperations_FetchHomePage_Handler,
		},
		{
			MethodName: "FetchAboutPage",
			Handler:    _HomeOperations_FetchAboutPage_Handler,
		},
		{
			MethodName: "SendContactUsMessage",
			Handler:    _HomeOperations_SendContactUsMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "home.proto",
}
